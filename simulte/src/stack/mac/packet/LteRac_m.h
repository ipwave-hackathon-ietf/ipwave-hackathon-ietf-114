//
// Generated file, do not edit! Created by nedtool 5.4 from stack/mac/packet/LteRac.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __LTERAC_M_H
#define __LTERAC_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>stack/mac/packet/LteRac.msg:11</tt> by nedtool.
 * <pre>
 * packet LteRac
 * {
 *     // meaningful only for DL (response) RAC packets : if true RAC request has been admitted.
 *     bool success;
 * }
 * </pre>
 */
class LteRac : public ::omnetpp::cPacket
{
  protected:
    bool success;

  private:
    void copy(const LteRac& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const LteRac&);

  public:
    LteRac(const char *name=nullptr, short kind=0);
    LteRac(const LteRac& other);
    virtual ~LteRac();
    LteRac& operator=(const LteRac& other);
    virtual LteRac *dup() const override {return new LteRac(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual bool getSuccess() const;
    virtual void setSuccess(bool success);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const LteRac& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, LteRac& obj) {obj.parsimUnpack(b);}


#endif // ifndef __LTERAC_M_H

