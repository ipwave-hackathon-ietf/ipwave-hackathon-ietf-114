//
// Generated file, do not edit! Created by nedtool 5.4 from apps/cbr/CbrPacket.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __INET_CBRPACKET_M_H
#define __INET_CBRPACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

/**
 * Class generated from <tt>apps/cbr/CbrPacket.msg:16</tt> by nedtool.
 * <pre>
 * //
 * // Packet used by the ~VoPSender and ~VoIPReceiver modules.
 * //
 * packet CbrPacket
 * {
 *     unsigned int nframes;
 *     unsigned int IDframe;
 *     simtime_t timestamp;
 *     simtime_t arrivalTime;
 *     unsigned int size;
 * }
 * </pre>
 */
class CbrPacket : public ::omnetpp::cPacket
{
  protected:
    unsigned int nframes;
    unsigned int IDframe;
    ::omnetpp::simtime_t timestamp;
    ::omnetpp::simtime_t arrivalTime;
    unsigned int size;

  private:
    void copy(const CbrPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CbrPacket&);

  public:
    CbrPacket(const char *name=nullptr, short kind=0);
    CbrPacket(const CbrPacket& other);
    virtual ~CbrPacket();
    CbrPacket& operator=(const CbrPacket& other);
    virtual CbrPacket *dup() const override {return new CbrPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getNframes() const;
    virtual void setNframes(unsigned int nframes);
    virtual unsigned int getIDframe() const;
    virtual void setIDframe(unsigned int IDframe);
    virtual ::omnetpp::simtime_t getTimestamp() const;
    virtual void setTimestamp(::omnetpp::simtime_t timestamp);
    virtual ::omnetpp::simtime_t getArrivalTime() const;
    virtual void setArrivalTime(::omnetpp::simtime_t arrivalTime);
    virtual unsigned int getSize() const;
    virtual void setSize(unsigned int size);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CbrPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CbrPacket& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_CBRPACKET_M_H

