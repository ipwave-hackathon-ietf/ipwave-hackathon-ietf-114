//
// Generated file, do not edit! Created by nedtool 5.4 from apps/geoNet/GeoNetworking.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __GEONETWORKING_M_H
#define __GEONETWORKING_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>apps/geoNet/GeoNetworking.msg:17</tt> by nedtool.
 * <pre>
 * packet GeoNetworkingPacket
 * {
 *     unsigned int maximumLatency;
 *     unsigned int priority;
 *     unsigned int sourceAddress;
 *     unsigned int destinationAddress;
 *     unsigned int direction;
 * }
 * </pre>
 */
class GeoNetworkingPacket : public ::omnetpp::cPacket
{
  protected:
    unsigned int maximumLatency;
    unsigned int priority;
    unsigned int sourceAddress;
    unsigned int destinationAddress;
    unsigned int direction;

  private:
    void copy(const GeoNetworkingPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const GeoNetworkingPacket&);

  public:
    GeoNetworkingPacket(const char *name=nullptr, short kind=0);
    GeoNetworkingPacket(const GeoNetworkingPacket& other);
    virtual ~GeoNetworkingPacket();
    GeoNetworkingPacket& operator=(const GeoNetworkingPacket& other);
    virtual GeoNetworkingPacket *dup() const override {return new GeoNetworkingPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual unsigned int getMaximumLatency() const;
    virtual void setMaximumLatency(unsigned int maximumLatency);
    virtual unsigned int getPriority() const;
    virtual void setPriority(unsigned int priority);
    virtual unsigned int getSourceAddress() const;
    virtual void setSourceAddress(unsigned int sourceAddress);
    virtual unsigned int getDestinationAddress() const;
    virtual void setDestinationAddress(unsigned int destinationAddress);
    virtual unsigned int getDirection() const;
    virtual void setDirection(unsigned int direction);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const GeoNetworkingPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, GeoNetworkingPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __GEONETWORKING_M_H

